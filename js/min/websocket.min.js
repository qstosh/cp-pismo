"use strict";function CpWebsocket(t){this._endpoint=t,this._evm=new CpEventManager}function CpWebsocketTickService(t,e){if(!(t instanceof CpWebsocket))throw new TypeError;this._ws=t,this._tickDelay=e||5e3}CpLogger.create(CpWebsocket),CpWebsocket.prototype.ready=function(t){this._ready?t():(this._evm.on("ready",t),this._connect())},CpWebsocket.prototype._connect=function(){this._ws||(this._ws=new WebSocket(this._endpoint),this._ws.onopen=function(){this.constructor.logger.debug("Websocket connected to "+this._endpoint),this._evm.trigger("ready")}.bind(this),this._ws.onclose=function(){this._ws=null,this._evm.trigger("disconnect"),this.constructor.logger.debug("Websocket disconnected from "+this._endpoint)}.bind(this),this._ws.onmessage=function(t){var e=null;try{e=JSON.parse(t.data)}catch(o){return this.constructor.logger.debug("Unable to parse JSON from "+this._endpoint,t.data),void this._evm.trigger("error",o)}return e.error||e.stack?(this.constructor.logger.error("Error from "+this._endpoint,e.error,e.stack),void this._evm.trigger("error",e.error)):(this.constructor.logger.debug("Got message from "+this._endpoint),void this._evm.trigger("message",e))}.bind(this),this._ws.onerror=function(){this.constructor.logger.debug("Error when connecting to "+this._endpoint),this._evm.trigger("error")}.bind(this))},CpWebsocket.prototype.send=function(t){if(!this._ws)throw new Error("Disconnected");return this.constructor.logger.debug("Sending message to "+this._endpoint),this._ws.send(JSON.stringify(t)),this},CpWebsocket.prototype.onDisconnect=function(t){this._evm.on("disconnect",t)},CpWebsocket.prototype.onMessage=function(t){this._evm.on("message",t)},CpWebsocket.prototype.onError=function(t){this._evm.on("error",t)},CpWebsocket.prototype.close=function(){this._ws.onclose=function(){},this._ws.close()},CpLogger.create(CpWebsocketTickService),CpWebsocketTickService.prototype.enable=function(){return window.clearInterval(this._interval),this._interval=window.setInterval(function(){this.constructor.logger.debug("Tick message"),this._ws.send({method:"tick"})}.bind(this),this._tickDelay),this._ws.onDisconnect(function(){this.disable()}.bind(this)),this},CpWebsocketTickService.prototype.disable=function(){return window.clearInterval(this._interval),this};